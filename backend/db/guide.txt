To run migrate commands (from backend folder):
migrate -path db/migrations -database "<connection_string>" -verbose <command_to_be_executed>

To create a new migration (from backend folder):
migrate create -ext sql -dir db/migrations -seq <name_of_migration>

sqlc generate
after having modified the query and schema files

Transactions:
use tx.Commit() if there are no errors at the end of the transaction
if error call tx.Rollback()
tx.Rollback() can be defered since if Commit is called first then rollback has no effect


{
  "delivery_frequency": "weekly",
  "destination": "New York",
  "special_handling": "fragile",
  "insurance": 5,
  "include_insurance": true,
  "cart_id": 2
}

{
    "Email": "test@example.com",
    "Password": "testing"
}

type OrderRequest struct {
	CartID     int32  `json:"cart_id"`
	CardNumber string `json:"card_number"`
	ExpiryDate string `json:"expiry_date"`
	CVV        string `json:"cvv"`
}

{
  "cart_id" : 2,
  "card_number" : "1234123412341234",
  "expiry_date" : "11/24",
  "cvv": "123"
}

      {
      "RegisterMode" : "client",
      "UserData" : {
        "Name":        "test",
        "LastName":    "test",
        "Password":    "test",
        "PhoneNumber": "test",
        "Email":       "test",
        "Address":     "test"
         }
      }